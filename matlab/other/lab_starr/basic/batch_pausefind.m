function pausefind2(minlength)
% batch_pausefind
% Outputs txt file containing data relevant to our study.

%% define function
%this function analyzes pausers, asking for its input, the output of nex2isi
%example: [IPI,pausefreq,rectime]=pausefind2(data,100)

if nargin <1
    minlength=250;
end

%%
dirname = uigetdir('', 'Select directory that contains TXT files to be analyzed');
cd(dirname);

txt_files = dir('*nex.txt'); % selects TXT files that were created by nex2isi with 'nex.txt' ending as dictated in the function write_isi_txt

numfiles = length(txt_files);

fid = fopen([num2str(numfiles) 'pauser_analysis.txt'],'w'); % OPEN OUTPUT TEXT FILE FOR WRITING
fprintf(fid,'Input_File\tpauselength\tIPI\tpausefreq\r\n'); % COLUMNS

for i = 1:numfiles;
    temp = importdata(txt_files(i).name); %import text file, store in temp array
    isi = temp.data(:,3);
    %Pause = pausefind2(temp.data,50); %perform analysis with minimum ISI of 250msec
    fprintf(fid, '%s\t', txt_files(i).name);

    %% convert a nexfile to isi and extract the isi column
    %isi=data(:,3); %extract isi column of data from the data file generated by
    %nex2isi

    %% calculates pause parameters
    numspikes=length(isi)+1; %calculates total number of spikes
    rectime=sum(isi)/1000; % calculates total recording time in seconds
    timestamp=cumsum(isi); %calculates individual ISI timestamps
    Idx = find(isi>minlength);
    pauselength = (isi(Idx)); % length of each pause
    numpause=length(pauselength);
    pausefreq = numpause./rectime;

    if isempty(pauselength)
        fprintf(fid, '%4.3f\t', NaN);
        fprintf(fid, '%4.3f\t', NaN);
        fprintf(fid, '%4.3f\r\n', NaN);
        continue;
    end

    if numpause == 1;
        fprintf(fid, '%4.3f\t',pauselength);
        fprintf(fid, '%4.3f\t', NaN);
        fprintf(fid, '%4.3f\r\n', pausefreq);
        continue;
    end

    eptime = timestamp(Idx); % time of the end of each pause
    IPIunc = diff(eptime);
    IPIcf = pauselength(2:(end));
    IPI = IPIunc - IPIcf;
    IPI(abs(IPI)<0.001)=0; % takes all values if IPI very close to zero and rounds to zero


    %% and now for the graphics (so we can hold our heads high)
    %subplot(1,2,1)
    %hist(IPI); figure(gcf)
    %title('interpause interval histogram')

    %subplot(1,2,2)
    %hist(pauselength); figure(gcf)
    %title('pause length histogram')

    fprintf(fid, '%4.3f\t', pauselength);
    fprintf(fid, '%4.3f\t', IPI);
    fprintf(fid, '%4.3f\r\n', pausefreq);

end



fclose(fid);