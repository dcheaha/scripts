function isi = isi_SE(SPIKE_TIMES,binwidth,sp1,sp2,sp3);


%cla
% isi_SE This function plots an interspike interval
% histogram for the set of spike times found in spike_times.
% spike_times is generated by the function findspikes_win_2
% and consists of a cell array of spike times, with each row
% representing the spike times found in a single trace.
% Enter binwidth in ms.  Subplot coordinates are optional.
%
% isi = isi_SE(spike_times,binwidth,sp1,sp2,sp3)     
% 
% Example 1: A = load_PCDX_SE('/Raw/viv05/viv0503b.all','1-10',1);
%            spike_times = findspikes_win_SE(A,10,-200,-40,.1,1,1);
%            isi = isi_SE(spike_times,5,2,2,1);


%clear i
isi = 0;
%assignin('base','isi',isi)
for z = 1:size(SPIKE_TIMES,1)
    
    %assignin('base','z',z)
    diff_spikes_str = ['diff_spikes_trace_',num2str(z),...
        ' = diff(SPIKE_TIMES{',num2str(z),',:});'];
    eval(diff_spikes_str)
    %assignin('base','diff_spikes_str',diff_spikes_str)
    %assignin('base',['diff_spikes_trace_',num2str(z)],...
          %diff(SPIKE_TIMES{z}))
    
    isi_str = ['isi(1,size(isi,2)+1:size(isi,2)+size(diff_spikes_trace_',...
            num2str(z),',2)) =  diff_spikes_trace_',num2str(z),';'];
    %assignin('base','isi_str',isi_str)
    eval(isi_str)
    %assignin('base','isi',isi)
end



isi(1) = [];
%assignin('base','isi',isi)
ISI_mean = mean(isi);
%assignin('base','mean_isi',mean_isi)
ISI_mode = mode(isi);

ISI_median = median(isi);
%assignin('base','median_isi',median_isi)
ISI_std = std(isi);
%assignin('base','std_isi',std_isi)
ISI_cv = ISI_std/ISI_mean;
%assignin('base','cv_isi',cv_isi)
ISI_frequency = 1000/ISI_mean;
%assignin('base','frequency_isi',frequency_isi)

if nargin == 5
    subplot(sp1,sp2,sp3)
end
[hist_isi_y,hist_isi_x] = hist(isi,max(isi)/binwidth);
hist_isi_y_scaled = hist_isi_y/size(SPIKE_TIMES,1);
% assignin('base','hist_isi_y',hist_isi_y)
% assignin('base','hist_isi_x',hist_isi_x)
h = bar(hist_isi_x,hist_isi_y_scaled,'w');
set(h,'EdgeColor',[0 0 0]);
%assignin('base','h',h)
axis([0 300 0 max(hist_isi_y_scaled)+10])
xlabel('ms')
ylabel('events / trial')
y_lim = get(gca,'ylim');
if nargin == 5
    text(100,.80*y_lim(2),['mean = ',num2str(ISI_mean),' ms'],'FontSize',8);
    text(100,.70*y_lim(2),['mode = ',num2str(ISI_mode),' ms'],'FontSize',8);
    text(100,.60*y_lim(2),['median = ',num2str(ISI_median),' ms'],'FontSize',8);
    text(100,.50*y_lim(2),['std = ',num2str(ISI_std)],'FontSize',8);
    text(100,.40*y_lim(2),['cv = ',num2str(ISI_cv)],'FontSize',8);
    text(100,.30*y_lim(2),['freqency = ',num2str(ISI_frequency),' Hz'],'FontSize',8);
else
    text(200,.80*y_lim(2),['mean = ',num2str(ISI_mean),' ms']);
    text(200,.70*y_lim(2),['mode = ',num2str(ISI_mode),' ms']);
    text(200,.60*y_lim(2),['median = ',num2str(ISI_median),' ms']);
    text(200,.50*y_lim(2),['std = ',num2str(ISI_std)]);
    text(200,.40*y_lim(2),['cv = ',num2str(ISI_cv)]);
    text(200,.30*y_lim(2),['freqency = ',num2str(ISI_frequency),' Hz']);
end

isi.mean = ISI_mean;
isi.mode = ISI_mode;
isi.median = ISI_median;
isi.std = ISI_std;
isi.cv = ISI_cv;
isi.freq = ISI_frequency;
isi.hist_y = hist_isi_y_scaled;
isi.hist_x = hist_isi_x;



